{
    "sourceFile": "Dockerfile",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1706941795467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718651975873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,27 @@\n-FROM golang:1.17-alpine as build-env\r\n+FROM golang:1.19.1 as builder\r\n \r\n # environment variables\r\n ENV APP_NAME Ben-Bot-Go\r\n ENV CMD_PATH main.go\r\n+RUN mkdir -p /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go\r\n+COPY . mkdir /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n+WORKDIR /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n+RUN go get\r\n+RUN CGO_ENABLED=0 GOOS=linux go build -o /app/Ben-Bot-Go\r\n+RUN cp /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/.env /app/\r\n \r\n-# create source code directory\r\n-COPY . $GOPATH/src/$APP_NAME\r\n-WORKDIR $GOPATH/src/$APP_NAME\r\n-\r\n-# install dependencies\r\n-\r\n-RUN go mod download\r\n-\r\n-# build \r\n-RUN CGO_ENABLED=0 go build -v -o /$APP_NAME $GOPATH/src/$APP_NAME/$CMD_PATH\r\n-\r\n # Run Stage\r\n FROM alpine:3.14\r\n  \r\n # Set environment variable\r\n ENV APP_NAME Ben-Bot-Go\r\n- \r\n+\r\n+RUN apk add curl\r\n+RUN mkdir -p /app\r\n # copy data into image\r\n-COPY --from=build-env /$APP_NAME .\r\n+COPY --from=builder /app/Ben-Bot-Go .\r\n+COPY --from=builder /app/.env .\r\n  \r\n # listening on port  8080\r\n EXPOSE 8080\r\n \r\n@@ -42,6 +40,10 @@\n \r\n # ENV discord argument\r\n ENV DISCORD_BOT_TOKEN $DISCORD_BOT_TOKEN\r\n \r\n+EXPOSE 3000\r\n+\r\n+ENTRYPOINT [\"/app/Ben-Bot-Go\", \"-env, \"docker\"]\r\n+\r\n # Start app\r\n CMD ./$APP_NAME\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718941740363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,49 @@\n+FROM golang:1.19.1 as builder\r\n+\r\n+# environment variables\r\n+ENV APP_NAME Ben-Bot-Go\r\n+ENV CMD_PATH main.go\r\n+RUN mkdir -p /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go\r\n+COPY . mkdir /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n+WORKDIR /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n+RUN go get\r\n+RUN CGO_ENABLED=0 GOOS=linux go build -o /app/Ben-Bot-Go\r\n+RUN cp /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/.env /app/\r\n+\r\n+# Run Stage\r\n+FROM alpine:3.14\r\n+ \r\n+# Set environment variable\r\n+ENV APP_NAME Ben-Bot-Go\r\n+\r\n+RUN apk add curl\r\n+RUN mkdir -p /app\r\n+# copy data into image\r\n+COPY --from=builder /app/Ben-Bot-Go .\r\n+COPY --from=builder /app/.env .\r\n+ \r\n+# listening on port  8080\r\n+EXPOSE 8080\r\n+\r\n+# set argument vars in docker-run command\r\n+ARG AWS_ACCESS_KEY_ID\r\n+ARG AWS_SECRET_ACCESS_KEY\r\n+ARG AWS_DEFAULT_REGION\r\n+\r\n+# ENV AWS agrument\r\n+ENV AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID\r\n+ENV AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY\r\n+ENV AWS_DEFAULT_REGION $AWS_DEFAULT_REGION\r\n+\r\n+# set Discord APP token argument\r\n+ARG DISCORD_BOT_TOKEN\r\n+\r\n+# ENV discord argument\r\n+ENV DISCORD_BOT_TOKEN $DISCORD_BOT_TOKEN\r\n+\r\n+EXPOSE 3000\r\n+\r\n+ENTRYPOINT [ \"/app/Ben-Bot-Go\", \"-env\", \"docker\" ]\r\n+\r\n+# Start app\r\n+CMD ./$APP_NAME\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720235796196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,49 @@\n+FROM golang:1.19.1 as builder\r\n+\r\n+# environment variables\r\n+ENV APP_NAME Ben-Bot-Go\r\n+ENV CMD_PATH main.go\r\n+RUN mkdir -p /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go\r\n+COPY . /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n+WORKDIR /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n+RUN go get\r\n+RUN CGO_ENABLED=0 GOOS=linux go build -o /app/Ben-Bot-Go\r\n+RUN cp /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/.env /app/\r\n+\r\n+# Run Stage\r\n+FROM alpine:3.14\r\n+ \r\n+# Set environment variable\r\n+ENV APP_NAME Ben-Bot-Go\r\n+\r\n+RUN apk add curl\r\n+RUN mkdir -p /app\r\n+# copy data into image\r\n+COPY --from=builder /app/Ben-Bot-Go .\r\n+COPY --from=builder /app/.env .\r\n+ \r\n+# listening on port  8080\r\n+EXPOSE 8080\r\n+\r\n+# set argument vars in docker-run command\r\n+ARG AWS_ACCESS_KEY_ID\r\n+ARG AWS_SECRET_ACCESS_KEY\r\n+ARG AWS_DEFAULT_REGION\r\n+\r\n+# ENV AWS agrument\r\n+ENV AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID\r\n+ENV AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY\r\n+ENV AWS_DEFAULT_REGION $AWS_DEFAULT_REGION\r\n+\r\n+# set Discord APP token argument\r\n+ARG DISCORD_BOT_TOKEN\r\n+\r\n+# ENV discord argument\r\n+ENV DISCORD_BOT_TOKEN $DISCORD_BOT_TOKEN\r\n+\r\n+EXPOSE 3000\r\n+\r\n+ENTRYPOINT [ \"/app/Ben-Bot-Go\", \"-env\", \"docker\" ]\r\n+\r\n+# Start app\r\n+CMD ./$APP_NAME\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720236101968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,103 +45,5 @@\n \r\n ENTRYPOINT [ \"/app/Ben-Bot-Go\", \"-env\", \"docker\" ]\r\n \r\n # Start app\r\n-CMD ./$APP_NAME\n-FROM golang:1.19.1 as builder\r\n-\r\n-# environment variables\r\n-ENV APP_NAME Ben-Bot-Go\r\n-ENV CMD_PATH main.go\r\n-RUN mkdir -p /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go\r\n-COPY . mkdir /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n-WORKDIR /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n-RUN go get\r\n-RUN CGO_ENABLED=0 GOOS=linux go build -o /app/Ben-Bot-Go\r\n-RUN cp /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/.env /app/\r\n-\r\n-# Run Stage\r\n-FROM alpine:3.14\r\n- \r\n-# Set environment variable\r\n-ENV APP_NAME Ben-Bot-Go\r\n-\r\n-RUN apk add curl\r\n-RUN mkdir -p /app\r\n-# copy data into image\r\n-COPY --from=builder /app/Ben-Bot-Go .\r\n-COPY --from=builder /app/.env .\r\n- \r\n-# listening on port  8080\r\n-EXPOSE 8080\r\n-\r\n-# set argument vars in docker-run command\r\n-ARG AWS_ACCESS_KEY_ID\r\n-ARG AWS_SECRET_ACCESS_KEY\r\n-ARG AWS_DEFAULT_REGION\r\n-\r\n-# ENV AWS agrument\r\n-ENV AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID\r\n-ENV AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY\r\n-ENV AWS_DEFAULT_REGION $AWS_DEFAULT_REGION\r\n-\r\n-# set Discord APP token argument\r\n-ARG DISCORD_BOT_TOKEN\r\n-\r\n-# ENV discord argument\r\n-ENV DISCORD_BOT_TOKEN $DISCORD_BOT_TOKEN\r\n-\r\n-EXPOSE 3000\r\n-\r\n-ENTRYPOINT [ \"/app/Ben-Bot-Go\", \"-env\", \"docker\" ]\r\n-\r\n-# Start app\r\n-CMD ./$APP_NAME\n-FROM golang:1.19.1 as builder\r\n-\r\n-# environment variables\r\n-ENV APP_NAME Ben-Bot-Go\r\n-ENV CMD_PATH main.go\r\n-RUN mkdir -p /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go\r\n-COPY . mkdir /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n-WORKDIR /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/\r\n-RUN go get\r\n-RUN CGO_ENABLED=0 GOOS=linux go build -o /app/Ben-Bot-Go\r\n-RUN cp /go/src/github.com/NoTestsNoScrumMasters/Ben-Bot-Go/.env /app/\r\n-\r\n-# Run Stage\r\n-FROM alpine:3.14\r\n- \r\n-# Set environment variable\r\n-ENV APP_NAME Ben-Bot-Go\r\n-\r\n-RUN apk add curl\r\n-RUN mkdir -p /app\r\n-# copy data into image\r\n-COPY --from=builder /app/Ben-Bot-Go .\r\n-COPY --from=builder /app/.env .\r\n- \r\n-# listening on port  8080\r\n-EXPOSE 8080\r\n-\r\n-# set argument vars in docker-run command\r\n-ARG AWS_ACCESS_KEY_ID\r\n-ARG AWS_SECRET_ACCESS_KEY\r\n-ARG AWS_DEFAULT_REGION\r\n-\r\n-# ENV AWS agrument\r\n-ENV AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID\r\n-ENV AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY\r\n-ENV AWS_DEFAULT_REGION $AWS_DEFAULT_REGION\r\n-\r\n-# set Discord APP token argument\r\n-ARG DISCORD_BOT_TOKEN\r\n-\r\n-# ENV discord argument\r\n-ENV DISCORD_BOT_TOKEN $DISCORD_BOT_TOKEN\r\n-\r\n-EXPOSE 3000\r\n-\r\n-ENTRYPOINT [\"/app/Ben-Bot-Go\", \"-env, \"docker\"]\r\n-\r\n-# Start app\r\n-CMD ./$APP_NAME\n\\ No newline at end of file\n+CMD ./\"main.go\"\n\\ No newline at end of file\n"
                }
            ],
            "date": 1706941795467,
            "name": "Commit-0",
            "content": "FROM golang:1.17-alpine as build-env\r\n\r\n# environment variables\r\nENV APP_NAME Ben-Bot-Go\r\nENV CMD_PATH main.go\r\n\r\n# create source code directory\r\nCOPY . $GOPATH/src/$APP_NAME\r\nWORKDIR $GOPATH/src/$APP_NAME\r\n\r\n# install dependencies\r\n\r\nRUN go mod download\r\n\r\n# build \r\nRUN CGO_ENABLED=0 go build -v -o /$APP_NAME $GOPATH/src/$APP_NAME/$CMD_PATH\r\n\r\n# Run Stage\r\nFROM alpine:3.14\r\n \r\n# Set environment variable\r\nENV APP_NAME Ben-Bot-Go\r\n \r\n# copy data into image\r\nCOPY --from=build-env /$APP_NAME .\r\n \r\n# listening on port  8080\r\nEXPOSE 8080\r\n\r\n# set argument vars in docker-run command\r\nARG AWS_ACCESS_KEY_ID\r\nARG AWS_SECRET_ACCESS_KEY\r\nARG AWS_DEFAULT_REGION\r\n\r\n# ENV AWS agrument\r\nENV AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID\r\nENV AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY\r\nENV AWS_DEFAULT_REGION $AWS_DEFAULT_REGION\r\n\r\n# set Discord APP token argument\r\nARG DISCORD_BOT_TOKEN\r\n\r\n# ENV discord argument\r\nENV DISCORD_BOT_TOKEN $DISCORD_BOT_TOKEN\r\n\r\n# Start app\r\nCMD ./$APP_NAME"
        }
    ]
}